# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: smarthome
  name: smarthome
---
apiVersion: v1
data:
  config.yml: "mqtt:\n  # Required: host name\n  host: mqtt.nuc.lan\n  # Optional:
    port (default: shown below)\n  port: 1883\n  # Optional: topic prefix (default:
    shown below)\n  # WARNING: must be unique if you are running multiple instances\n
    \ topic_prefix: frigate\n  # Optional: client id (default: shown below)\n  # WARNING:
    must be unique if you are running multiple instances\n  client_id: frigate\n  #
    Optional: user\n  user: '{FRIGATE_MQTT_USER}'\n  # Optional: password\n  # NOTE:
    Environment variables that begin with 'FRIGATE_' may be referenced in {}.\n  #
    \      eg. password: '{FRIGATE_MQTT_PASSWORD}'\n  password: '{FRIGATE_MQTT_PASSWORD}'\n
    \ # Optional: interval in seconds for publishing stats (default: shown below)\n
    \ stats_interval: 60\n\ndetectors:\n  # coral:\n  #   type: edgetpu\n  #   device:
    usb\n  ov:\n    type: openvino\n    device: GPU\n\nmodel:\n  width: 300\n  height:
    300\n  input_tensor: nhwc\n  input_pixel_format: bgr\n  path: /openvino-model/ssdlite_mobilenet_v2.xml\n
    \ labelmap_path: /openvino-model/coco_91cl_bkgr.txt\n  \ngo2rtc:\n  streams:\n
    \   driveway:\n      - \"ffmpeg:http://driveway.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   driveway_sub:\n      - \"ffmpeg:http://driveway.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n
    \   parking:\n      - \"ffmpeg:http://parking.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   parking_sub:\n      - \"ffmpeg:http://parking.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n
    \   backyard:\n      - \"ffmpeg:http://backyard.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   backyard_sub:\n      - \"ffmpeg:http://backyard.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n
    \   garage:\n      - \"ffmpeg:http://garage.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   garage_sub:\n      - \"ffmpeg:http://garage.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n
    \   street:\n      - \"ffmpeg:http://street.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   street_sub:\n      - \"ffmpeg:http://street.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n
    \   front_doorbell:\n      - \"ffmpeg:http://front-doorbell.cams.lan/flv?port=1935&app=bcs&stream=channel0_main.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}#video=copy#audio=copy#audio=opus\"\n
    \   front_doorbell_sub:\n      - \"ffmpeg:http://front-doorbell.cams.lan/flv?port=1935&app=bcs&stream=channel0_ext.bcs&user={FRIGATE_GO2RTC_RTSP_USERNAME}&password={FRIGATE_GO2RTC_RTSP_PASSWORD}\"\n\ncameras:\n
    \ # Name of your camera\n  driveway:\n    ffmpeg:\n      inputs:\n        - path:
    rtsp://127.0.0.1:8554/driveway\n          roles:\n            - record\n        -
    path: rtsp://127.0.0.1:8554/driveway_sub\n          roles:\n            - detect\n
    \   webui_url: http://driveway.cams.lan\n  parking:\n    ffmpeg:\n      inputs:\n
    \       - path: rtsp://127.0.0.1:8554/parking\n          roles:\n            -
    record\n        - path: rtsp://127.0.0.1:8554/parking_sub\n          roles:\n
    \           - detect\n    webui_url: http://parking.cams.lan\n  backyard:\n    ffmpeg:\n
    \     inputs:\n        - path: rtsp://127.0.0.1:8554/backyard\n          roles:\n
    \           - record\n        - path: rtsp://127.0.0.1:8554/backyard_sub\n          roles:\n
    \           - detect\n    webui_url: http://backyard.cams.lan\n  garage:\n    ffmpeg:\n
    \     inputs:\n        - path: rtsp://127.0.0.1:8554/garage\n          roles:\n
    \           - record\n        - path: rtsp://127.0.0.1:8554/garage_sub\n          roles:\n
    \           - detect\n    webui_url: http://garage.cams.lan\n  street:\n    ffmpeg:\n
    \     inputs:\n        - path: rtsp://127.0.0.1:8554/street\n          roles:\n
    \           - record\n        - path: rtsp://127.0.0.1:8554/street_sub\n          roles:\n
    \           - detect\n    webui_url: http://street.cams.lan\n  front_doorbell:\n
    \   ffmpeg:\n      inputs:\n        - path: rtsp://127.0.0.1:8554/front_doorbell\n
    \         roles:\n            - record\n        - path: rtsp://127.0.0.1:8554/front_doorbell_sub\n
    \         roles:\n            - detect\n    webui_url: http://front-doorbell.cams.lan\n\nrecord:\n
    \ enabled: True\n  retain:\n    days: 1\n    mode: motion\n  alerts:\n    retain:\n
    \     days: 2\n      mode: motion\n  detections:\n    retain:\n      days: 2\n
    \     mode: motion\n"
kind: ConfigMap
metadata:
  labels:
    app: smarthome
    app.kubernetes.io/instance: home
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frigate
    helm.sh/chart: frigate-7.8.0
  name: home-frigate
  namespace: smarthome
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smarthome
    app.kubernetes.io/instance: home
    app.kubernetes.io/name: frigate
    app.kubernetes.io/version: stable
    helm.sh/chart: frigate-7.8.0
  name: home-frigate
  namespace: smarthome
spec:
  ipFamilyPolicy: SingleStack
  ports:
  - name: http
    port: 5000
    protocol: TCP
    targetPort: http
  - name: http-auth
    port: 8971
    protocol: TCP
    targetPort: http-auth
  - name: rtmp
    port: 1935
    protocol: TCP
    targetPort: rtmp
  - name: rtsp
    port: 8554
    protocol: TCP
    targetPort: rtsp
  - name: webrtc-tcp
    port: 8555
    protocol: TCP
    targetPort: webrtc-tcp
  - name: webrtc-udp
    port: 8555
    protocol: UDP
    targetPort: webrtc-udp
  selector:
    app: smarthome
    app.kubernetes.io/instance: home
    app.kubernetes.io/name: frigate
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smarthome
  name: homeassistant
  namespace: smarthome
spec:
  ports:
  - name: webui
    port: 8123
    protocol: TCP
    targetPort: 8123
  selector:
    app: smarthome
    run: homeassistant
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: smarthome
  name: mosquitto
  namespace: smarthome
spec:
  ports:
  - name: mosquitto
    port: 1883
    protocol: TCP
    targetPort: 1883
  selector:
    app: smarthome
    run: mosquitto
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smarthome
    app.kubernetes.io/instance: home
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: frigate
    app.kubernetes.io/version: stable
    helm.sh/chart: frigate-7.8.0
  name: home-frigate
  namespace: smarthome
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: smarthome
      app.kubernetes.io/instance: home
      app.kubernetes.io/name: frigate
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/configmap: cd56cb16519dd78836d23a821e84b77dce4f44e1c7ac078c46a3bcba4e2e772b
      labels:
        app: smarthome
        app.kubernetes.io/instance: home
        app.kubernetes.io/name: frigate
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        envFrom:
        - secretRef:
            name: frigate-secret-env
        image: ghcr.io/blakeblackshear/frigate:stable
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
        name: frigate
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        - containerPort: 8971
          name: http-auth
          protocol: TCP
        - containerPort: 1935
          name: rtmp
          protocol: TCP
        - containerPort: 8554
          name: rtsp
          protocol: TCP
        - containerPort: 8555
          name: webrtc-udp
          protocol: UDP
        - containerPort: 8555
          name: webrtc-tcp
          protocol: TCP
        - containerPort: 1984
          name: go2rtc-admin
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 10
        resources:
          limits:
            gpu.intel.com/i915: "1"
          requests:
            gpu.intel.com/i915: "1"
        securityContext: {}
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: /data
          name: data
        - mountPath: /media
          name: media
        - mountPath: /dev/shm
          name: dshm
        - mountPath: /tmp
          name: tmp
      volumes:
      - hostPath:
          path: /opt/smarthome/frigate
          type: DirectoryOrCreate
        name: config
      - hostPath:
          path: /opt/smarthome/frigate-media
          type: DirectoryOrCreate
        name: media
      - configMap:
          name: home-frigate
        name: configmap
      - emptyDir: {}
        name: data
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: dshm
      - emptyDir:
          medium: Memory
          sizeLimit: 1Gi
        name: tmp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smarthome
    run: homeassistant
  name: homeassistant
  namespace: smarthome
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smarthome
      run: homeassistant
  template:
    metadata:
      labels:
        app: smarthome
        run: homeassistant
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: PYTHONHTTPSVERIFY
          value: "0"
        image: lscr.io/linuxserver/homeassistant
        name: homeassistant
        ports:
        - containerPort: 8123
          name: webui
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: smarthome-home
          subPath: homeassistant
      hostNetwork: true
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/smarthome
          type: DirectoryOrCreate
        name: smarthome-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: smarthome
    run: mosquitto
  name: mosquitto
  namespace: smarthome
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smarthome
      run: mosquitto
  template:
    metadata:
      labels:
        app: smarthome
        run: mosquitto
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: PYTHONHTTPSVERIFY
          value: "0"
        image: eclipse-mosquitto:openssl
        name: mosquitto
        ports:
        - containerPort: 1883
          name: mosquitto
          protocol: TCP
        volumeMounts:
        - mountPath: /mosquitto/config
          name: mosquitto-home
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/smarthome/mosquitto
          type: DirectoryOrCreate
        name: mosquitto-home
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: smarthome
  name: security-camera-poster-update
  namespace: smarthome
spec:
  jobTemplate:
    metadata:
      labels:
        app: smarthome
    spec:
      template:
        metadata:
          labels:
            app: smarthome
        spec:
          containers:
          - args:
            - "date\necho \"Starting to get camera snapshots\"\nfor i in $(seq 0 10);\ndo\n
              \ echo \"Getting NVR_BASEURL/cgi-bin/api.cgi?cmd=Snap&channel=${i}&stream=0&rs=1&user=NVR_USERNAME&password=NVR_PASSWORD&width=640&height=480\"\n
              \ wget -O /config/www/camera-snapshots/$i.jpg \"${NVR_BASEURL}/cgi-bin/api.cgi?cmd=Snap&channel=${i}&stream=0&rs=1&user=${NVR_USERNAME}&password=${NVR_PASSWORD}&width=640&height=480\"\ndone\necho
              \"Job finished.\"\ndate                \n"
            command:
            - /bin/sh
            - -c
            envFrom:
            - secretRef:
                name: security-system
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            name: security-camera-snaps
            volumeMounts:
            - mountPath: /config
              name: smarthome-home
              subPath: homeassistant
          restartPolicy: OnFailure
          volumes:
          - hostPath:
              path: /opt/smarthome
              type: DirectoryOrCreate
            name: smarthome-home
  schedule: '*/2 * * * *'
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: smarthome
  name: frigate
  namespace: smarthome
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`frigate.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: home-frigate
      namespace: smarthome
      port: http-auth
      scheme: https
  tls:
    certResolver: default
    domains:
    - main: kouse.xyz
      sans:
      - '*.kouse.xyz'
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: smarthome
  name: homeassistant-local
  namespace: smarthome
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`ha.nuc.lan`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: homeassistant
      namespace: smarthome
      port: 8123
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: smarthome
  name: smarthome
  namespace: smarthome
spec:
  entryPoints:
  - web
  - websecure
  routes:
  - kind: Rule
    match: Host(`ha.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: homeassistant
      namespace: smarthome
      port: 8123
  tls:
    certResolver: default
    domains:
    - main: kouse.xyz
      sans:
      - '*.kouse.xyz'
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  labels:
    app: smarthome
  name: frigate-rtsp
  namespace: smarthome
spec:
  entryPoints:
  - frigatertsp
  routes:
  - match: HostSNI(`*`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - name: home-frigate
      namespace: smarthome
      port: rtsp
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  labels:
    app: smarthome
  name: mosquitto
  namespace: smarthome
spec:
  entryPoints:
  - mqtt
  routes:
  - match: HostSNI(`*`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - name: mosquitto
      namespace: smarthome
      port: mosquitto
