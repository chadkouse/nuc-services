# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: htpc
  name: htpc
---
apiVersion: v1
data:
  DEBUG: "False"
  DEBUG_LEVEL: info
  DRYRUN: "False"
  GENERATE_GUIDS: "False"
  LIBRARY_MAPPING: '{"TV Shows":"Shows", "Other":"Misc"}'
  SYNC_FROM_JELLYFIN_TO_JELLYFIN: "True"
  SYNC_FROM_JELLYFIN_TO_PLEX: "True"
  SYNC_FROM_PLEX_TO_JELLYFIN: "True"
  USER_MAPPING: '{"chadkouse":"chad", "dad":"chad", "clemmy":"clementine"}'
kind: ConfigMap
metadata:
  labels:
    app: htpc
  name: jellyplex-watched
  namespace: htpc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: bazarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 6767
    protocol: TCP
    targetPort: 6767
  selector:
    app: htpc
    run: bazarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: jellyfin
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8096
    protocol: TCP
    targetPort: 8096
  selector:
    app: htpc
    run: jellyfin
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: nzbget
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 6789
    protocol: TCP
    targetPort: 6789
  selector:
    app: htpc
    run: nzbget
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: overseerr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 5055
    protocol: TCP
    targetPort: 5055
  selector:
    app: htpc
    run: overseerr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: plex
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 32400
    protocol: TCP
    targetPort: 32400
  selector:
    app: htpc
    run: plex
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: prowlarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    app: htpc
    run: prowlarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: qbittorrent
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: htpc
    run: qbittorrent
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: radarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 7878
    protocol: TCP
    targetPort: 7878
  selector:
    app: htpc
    run: radarr
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: htpc
  name: sonarr
  namespace: htpc
spec:
  ports:
  - name: webui
    port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: htpc
    run: sonarr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: bazarr
  name: bazarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: bazarr
  template:
    metadata:
      labels:
        app: htpc
        run: bazarr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/bazarr:v1.5.2-ls306
        name: bazarr
        ports:
        - containerPort: 6767
          name: webui
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: bazarr
        - mountPath: /movies
          name: htpc-media-movies
        - mountPath: /tv
          name: htpc-media-tv
      initContainers:
      - command:
        - sh
        - -c
        - until wget -qO- sonarr:8989/sonarr &> /dev/null && wget -qO- radarr:7878/radarr
          &> /dev/null; do echo waiting for sonarr and radarr; sleep 2; done;
        image: busybox
        name: wait-for-sonarr-and-radarr
      - command:
        - sh
        - -c
        - "mkdir -p /htpc/bazarr/config\nexport RADARR_API_KEY=$(cat /htpc/radarr/config.xml
          | sed -ne \"/ApiKey/{s/.*<ApiKey>\\(.*\\)<\\/ApiKey>.*/\\1/p;q;}\")\nexport
          SONARR_API_KEY=$(cat /htpc/sonarr/config.xml | sed -ne \"/ApiKey/{s/.*<ApiKey>\\(.*\\)<\\/ApiKey>.*/\\1/p;q;}\")\ncat
          << EOF > /htpc/bazarr/config/config.ini\n[sonarr]\napikey = ${SONARR_API_KEY}\nfull_update
          = Daily\nip = sonarr\nonly_monitored = False\nbase_url = /sonarr\nssl =
          False\nport = 8989\n\n[radarr]\napikey = ${RADARR_API_KEY}\nfull_update
          = Daily\nip = radarr\nonly_monitored = False\nbase_url = /radarr\nssl =
          False\nport = 7878\n\n[general]\nmovie_default_hi = False\nmovie_default_language
          = []\nip = 0.0.0.0\nuse_scenename = True\nuse_postprocessing = False\nenabled_providers
          = subscene,tvsubtitles\nauto_update = True\nport = 6767\nuse_radarr = True\nbase_url
          = /bazarr/\npage_size = 25\nminimum_score_movie = 70\nbranch = master\nsingle_language
          = False\nuse_sonarr = True\nserie_default_hi = False\npath_mappings_movie
          = [['/movies', '/movies'], ['', ''], ['', ''], ['', ''], ['', '']]\nserie_default_enabled
          = False\nmovie_default_enabled = False\nserie_default_language = []\npath_mappings
          = [['/tv', '/tv'], ['', ''], ['', ''], ['', ''], ['', '']]\npostprocessing_cmd
          = \nminimum_score = 90\ndebug = False\nuse_embedded_subs = True\nadaptive_searching
          = False\nEOF\n"
        image: busybox
        name: config
        volumeMounts:
        - mountPath: /htpc
          name: htpc-home
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: jellyfin
  name: jellyfin
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: jellyfin
  template:
    metadata:
      labels:
        app: htpc
        run: jellyfin
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/jellyfin:10.10.7ubu2404-ls61
        name: jellyfin
        ports:
        - containerPort: 8096
          name: webui
          protocol: TCP
        - containerPort: 8920
          name: webui-ssl
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jellyfin
        - mountPath: /tv
          name: htpc-media-tv
        - mountPath: /movies
          name: htpc-media-movies
        - mountPath: /sports
          name: htpc-media-sports
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: jellyplex-watched
  name: jellyplex-watched
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: jellyplex-watched
  template:
    metadata:
      labels:
        app: htpc
        run: jellyplex-watched
    spec:
      containers:
      - env:
        - name: PLEX_BASEURL
          valueFrom:
            secretKeyRef:
              key: plex_baseurl
              name: jellyplex-watched
        - name: PLEX_TOKEN
          valueFrom:
            secretKeyRef:
              key: plex_token
              name: jellyplex-watched
        - name: JELLYFIN_BASEURL
          valueFrom:
            secretKeyRef:
              key: jellyfin_baseurl
              name: jellyplex-watched
        - name: JELLYFIN_TOKEN
          valueFrom:
            secretKeyRef:
              key: jellyfin_token
              name: jellyplex-watched
        envFrom:
        - configMapRef:
            name: jellyplex-watched
        image: luigi311/jellyplex-watched
        name: jellyplex-watched
      securityContext:
        fsGroup: 1000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: nzbget
  name: nzbget
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: nzbget
  template:
    metadata:
      labels:
        app: htpc
        run: nzbget
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/nzbget
        name: nzbget
        ports:
        - containerPort: 8096
          name: webui
          protocol: TCP
        - containerPort: 8920
          name: webui-ssl
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: nzbget
        - mountPath: /tv
          name: htpc-media-tv
        - mountPath: /movies
          name: htpc-media-movies
        - mountPath: /sports
          name: htpc-media-sports
        - mountPath: /downloads
          name: htpc-home
          subPath: nzb-downloads
        - mountPath: /incoming
          name: htpc-media-incoming
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/incoming
        name: htpc-media-incoming
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: overseerr
  name: overseerr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: overseerr
  template:
    metadata:
      labels:
        app: htpc
        run: overseerr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/overseerr:v1.34.0-ls141
        name: overseerr
        ports:
        - containerPort: 5055
          name: webui
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: jellyfin
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: plex
  name: plex
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: plex
  template:
    metadata:
      labels:
        app: htpc
        run: plex
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/plex
        name: plex
        ports:
        - containerPort: 32400
          name: webui
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: plex
        - mountPath: /tv
          name: htpc-media-tv
        - mountPath: /movies
          name: htpc-media-movies
        - mountPath: /sports
          name: htpc-media-sports
      hostNetwork: true
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: prowlarr
  name: prowlarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: prowlarr
  template:
    metadata:
      labels:
        app: htpc
        run: prowlarr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/prowlarr:1.37.0.5076-ls119
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:9696/prowlarr/api/v1/health?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: prowlarr
        ports:
        - containerPort: 9696
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:9696/prowlarr/api/v1/system/status?ApiKey=$(sed
              -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: prowlarr
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: prowlarr
      - args:
        - |
          echo 'Customizing Prowlarr config...'
          if [[ ! -f /config/config.xml ]]; then
            echo '<Config><UrlBase>/prowlarr</UrlBase></Config>'> /config/config.xml
          fi
          echo 'Prowlarr config customized.'
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: prowlarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: qbittorrent
  name: qbittorrent
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: qbittorrent
  template:
    metadata:
      labels:
        app: htpc
        run: qbittorrent
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: lscr.io/linuxserver/qbittorrent:5.1.0-r0-ls396
        name: qbittorrent
        ports:
        - containerPort: 8080
          name: webui
          protocol: TCP
        volumeMounts:
        - mountPath: /config
          name: htpc-home
        - mountPath: /downloads
          name: htpc-home
          subPath: torrent-downloads
        - mountPath: /incoming
          name: htpc-media-incoming
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/incoming
        name: htpc-media-incoming
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: radarr
  name: radarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: radarr
  template:
    metadata:
      labels:
        app: htpc
        run: radarr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/radarr:5.23.3.9987-ls275
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: radarr
        ports:
        - containerPort: 7878
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:7878/radarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-media-movies
        - mountPath: /sports
          name: htpc-media-sports
        - mountPath: /incoming
          name: htpc-media-incoming
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /movies
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
        - mountPath: /movies
          name: htpc-media-movies
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/radarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: radarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/incoming
        name: htpc-media-incoming
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: htpc
    run: sonarr
  name: sonarr
  namespace: htpc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: htpc
      run: sonarr
  template:
    metadata:
      labels:
        app: htpc
        run: sonarr
    spec:
      containers:
      - env:
        - name: TZ
          value: America/New_York
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        image: linuxserver/sonarr:4.0.14.2939-ls283
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}'
              </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        name: sonarr
        ports:
        - containerPort: 8989
          name: webui
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl "http://localhost:8989/sonarr/api/system/status?ApiKey=$(sed -ne
              '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-media-tv
        - mountPath: /incoming
          name: htpc-media-incoming
      initContainers:
      - command:
        - sh
        - -c
        - chown -R 1000:1000 /config && chown -R 1000:1000 /tv
        image: busybox
        name: chown
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
        - mountPath: /tv
          name: htpc-media-tv
      - args:
        - echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/sonarr</UrlBase></Config>'>
          /config/config.xml;echo end;
        command:
        - sh
        - -c
        image: busybox
        name: config
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /config
          name: htpc-home
          subPath: sonarr
      securityContext:
        fsGroup: 1000
      volumes:
      - hostPath:
          path: /opt/htpc
          type: DirectoryOrCreate
        name: htpc-home
      - hostPath:
          path: /media/seagate2/incoming
        name: htpc-media-incoming
      - hostPath:
          path: /media/seagate2/plex/tv
        name: htpc-media-tv
      - hostPath:
          path: /media/seagate/plex/movies
        name: htpc-media-movies
      - hostPath:
          path: /media/seagate/plex/sports
        name: htpc-media-sports
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  labels:
    app: htpc
  name: htpc
  namespace: htpc
spec:
  entryPoints:
  - web
  - websecure
  routes:
  - kind: Rule
    match: PathPrefix(`/jellyfin`) || Host(`jellyfin.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: jellyfin
      namespace: htpc
      port: 8096
  - kind: Rule
    match: PathPrefix(`/sonarr`) || Host(`sonarr.kouse.xyz`)
    priority: 0
    services:
    - kind: Service
      name: sonarr
      namespace: htpc
      port: 8989
  - kind: Rule
    match: PathPrefix(`/radarr`) || Host(`radarr.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: radarr
      namespace: htpc
      port: 7878
  - kind: Rule
    match: Host(`bazarr.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: bazarr
      namespace: htpc
      port: 6767
  - kind: Rule
    match: Host(`qb.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    priority: 0
    services:
    - kind: Service
      name: qbittorrent
      namespace: htpc
      passHostHeader: false
      port: 8080
  - kind: Rule
    match: Host(`prowlarr.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: prowlarr
      namespace: htpc
      port: 9696
  - kind: Rule
    match: Host(`nzbget.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: nzbget
      namespace: htpc
      port: 6789
  - kind: Rule
    match: PathPrefix(`/overseerr`) || Host(`overseerr.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: overseerr
      namespace: htpc
      port: 5055
  - kind: Rule
    match: PathPrefix(`/plex`) || Host(`plex.kouse.xyz`)
    priority: 0
    services:
    - kind: Service
      name: plex
      namespace: htpc
      port: 32400
  tls:
    certResolver: default
    domains:
    - main: kouse.xyz
      sans:
      - '*.kouse.xyz'
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  labels:
    app: htpc
  name: ipallowlist
  namespace: htpc
spec:
  ipAllowList:
    sourceRange:
    - 127.0.0.1/32
    - 10.0.1.0/24
    - 10.0.2.0/24
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  labels:
    app: htpc
  name: plex-redirect
  namespace: htpc
spec:
  redirectRegex:
    regex: ^(.*)/plex$
    replacement: $1/web/
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  labels:
    app: htpc
  name: qb-headers
  namespace: htpc
spec:
  headers:
    customRequestHeaders:
      X-Frame-Options: SAMEORIGIN
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  labels:
    app: htpc
  name: qb-redirect
  namespace: htpc
spec:
  redirectRegex:
    regex: ^(.*)/qb$
    replacement: $1/qb/
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  labels:
    app: htpc
  name: qb-strip
  namespace: htpc
spec:
  stripPrefix:
    prefixes:
    - /qb
