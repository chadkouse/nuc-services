---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: smarthome
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - kind: Rule
    match: Host(`ha.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: homeassistant
      namespace: "smarthome"
      port: 8123
  tls:
    certResolver: default
    domains:
      - main: "kouse.xyz"
        sans:
          - "*.kouse.xyz"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteUDP
metadata:
  name: broadcast
spec:
  entryPoints:
    - broadcast
  routes:
  - services:
    - name: homeassistant
      namespace: smarthome
      port: 6666
      nativeLB: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteUDP
metadata:
  name: broadcast2
spec:
  entryPoints:
    - broadcast2
  routes:
  - services:
    - name: homeassistant
      namespace: smarthome
      port: 6667
      nativeLB: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: homeassistant-local
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`ha.nuc.lan`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: homeassistant
      namespace: "smarthome"
      port: 8123
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: frigate
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`frigate.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: home-frigate
      namespace: "smarthome"
      port: http-auth
      scheme: https
      serversTransport: frigate
  tls:
    certResolver: default
    domains:
      - main: "kouse.xyz"
        sans:
          - "*.kouse.xyz"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: mosquitto
spec:
  entryPoints:
    - mqtt
  routes:
  - match: HostSNI(`*`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - name: mosquitto
      namespace: smarthome
      port: mosquitto
---
apiVersion: traefik.io/v1alpha1
kind: IngressRouteTCP
metadata:
  name: frigate-rtsp
spec:
  entryPoints:
    - frigatertsp
  routes:
  - match: HostSNI(`*`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - name: home-frigate
      namespace: smarthome
      port: rtsp
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: frigate-go2rtc
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`go2rtc.kouse.xyz`) && ClientIP(`10.0.0.0/8`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: home-frigate
      namespace: "smarthome"
      port: go2rtc-admin
  tls:
    certResolver: default
    domains:
      - main: "kouse.xyz"
        sans:
          - "*.kouse.xyz"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: opensprinklercontroller
spec:
  entryPoints:
    - web
    - websecure
  routes:
  - kind: Rule
    match: Host(`opensprinklercontroller.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: opensprinklercontroller
      namespace: "smarthome"
      port: sprinkler-http
  tls:
    certResolver: default
    domains:
      - main: "kouse.xyz"
        sans:
          - "*.kouse.xyz"
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: zwave-js-ui
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`zwave.kouse.xyz`)
    middlewares: []
    priority: 0
    services:
    - kind: Service
      name: zwave-js-ui
      namespace: "smarthome"
      port: http
  tls:
    certResolver: default
    domains:
      - main: "kouse.xyz"
        sans:
          - "*.kouse.xyz"